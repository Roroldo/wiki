{"remainingRequest":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\thread-loader\\dist\\cjs.js!F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\ts-loader\\index.js??ref--13-2!F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\eslint-loader\\index.js??ref--12-0!F:\\MyProject\\MyWiki\\Wiki\\web\\src\\util\\tool.ts","dependencies":[{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\src\\util\\tool.ts","mtime":1630633154486},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631892357225},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1631892357210},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\ts-loader\\index.js","mtime":1631892359045},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\eslint-loader\\index.js","mtime":1631892357618}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIFRvb2wgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7DQogICAgZnVuY3Rpb24gVG9vbCgpIHsNCiAgICB9DQogICAgLyoqDQogICAgICog56m65qCh6aqMIG51bGzmiJYiIumDvei/lOWbnnRydWUNCiAgICAgKi8NCiAgICBUb29sLmlzRW1wdHkgPSBmdW5jdGlvbiAob2JqKSB7DQogICAgICAgIGlmICgodHlwZW9mIG9iaiA9PT0gJ3N0cmluZycpKSB7DQogICAgICAgICAgICByZXR1cm4gIW9iaiB8fCBvYmoucmVwbGFjZSgvXHMrL2csICIiKSA9PT0gIiI7DQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICByZXR1cm4gKCFvYmogfHwgSlNPTi5zdHJpbmdpZnkob2JqKSA9PT0gInt9IiB8fCBvYmoubGVuZ3RoID09PSAwKTsNCiAgICAgICAgfQ0KICAgIH07DQogICAgLyoqDQogICAgICog6Z2e56m65qCh6aqMDQogICAgICovDQogICAgVG9vbC5pc05vdEVtcHR5ID0gZnVuY3Rpb24gKG9iaikgew0KICAgICAgICByZXR1cm4gIXRoaXMuaXNFbXB0eShvYmopOw0KICAgIH07DQogICAgLyoqDQogICAgICog5a+56LGh5aSN5Yi2DQogICAgICogQHBhcmFtIG9iag0KICAgICAqLw0KICAgIFRvb2wuY29weSA9IGZ1bmN0aW9uIChvYmopIHsNCiAgICAgICAgaWYgKFRvb2wuaXNOb3RFbXB0eShvYmopKSB7DQogICAgICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKTsNCiAgICAgICAgfQ0KICAgIH07DQogICAgLyoqDQogICAgICog5L2/55So6YCS5b2S5bCG5pWw57uE6L2s5Li65qCR5b2i57uT5p6EDQogICAgICog54i2SUTlsZ7mgKfkuLpwYXJlbnQNCiAgICAgKi8NCiAgICBUb29sLmFycmF5MlRyZWUgPSBmdW5jdGlvbiAoYXJyYXksIHBhcmVudElkKSB7DQogICAgICAgIGlmIChUb29sLmlzRW1wdHkoYXJyYXkpKSB7DQogICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgIH0NCiAgICAgICAgdmFyIHJlc3VsdCA9IFtdOw0KICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICB2YXIgYyA9IGFycmF5W2ldOw0KICAgICAgICAgICAgLy8gY29uc29sZS5sb2coTnVtYmVyKGMucGFyZW50KSwgTnVtYmVyKHBhcmVudElkKSk7DQogICAgICAgICAgICBpZiAoTnVtYmVyKGMucGFyZW50KSA9PT0gTnVtYmVyKHBhcmVudElkKSkgew0KICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGMpOw0KICAgICAgICAgICAgICAgIC8vIOmAkuW9kuafpeeci+W9k+WJjeiKgueCueWvueW6lOeahOWtkOiKgueCuQ0KICAgICAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IFRvb2wuYXJyYXkyVHJlZShhcnJheSwgYy5pZCk7DQogICAgICAgICAgICAgICAgaWYgKFRvb2wuaXNOb3RFbXB0eShjaGlsZHJlbikpIHsNCiAgICAgICAgICAgICAgICAgICAgYy5jaGlsZHJlbiA9IGNoaWxkcmVuOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgIH07DQogICAgLyoqDQogICAgICog6ZqP5py655Sf5oiQW2xlbl3plb/luqbnmoRbcmFkaXhd6L+b5Yi25pWwDQogICAgICogQHBhcmFtIGxlbg0KICAgICAqIEBwYXJhbSByYWRpeCDpu5jorqQ2Mg0KICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICovDQogICAgVG9vbC51dWlkID0gZnVuY3Rpb24gKGxlbiwgcmFkaXgpIHsNCiAgICAgICAgaWYgKHJhZGl4ID09PSB2b2lkIDApIHsgcmFkaXggPSA2MjsgfQ0KICAgICAgICB2YXIgY2hhcnMgPSAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonLnNwbGl0KCcnKTsNCiAgICAgICAgdmFyIHV1aWQgPSBbXTsNCiAgICAgICAgcmFkaXggPSByYWRpeCB8fCBjaGFycy5sZW5ndGg7DQogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHsNCiAgICAgICAgICAgIHV1aWRbaV0gPSBjaGFyc1swIHwgTWF0aC5yYW5kb20oKSAqIHJhZGl4XTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gdXVpZC5qb2luKCcnKTsNCiAgICB9Ow0KICAgIHJldHVybiBUb29sOw0KfSgpKTsNCmV4cG9ydCB7IFRvb2wgfTsNCg=="},{"version":3,"file":"F:\\MyProject\\MyWiki\\Wiki\\web\\src\\util\\tool.ts","sourceRoot":"","sources":["F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\eslint-loader\\index.js??ref--12-0!F:\\MyProject\\MyWiki\\Wiki\\web\\src\\util\\tool.ts"],"names":[],"mappings":"AAAA;IAAA;IAyEA,CAAC;IAxEC;;OAEG;IACW,YAAO,GAArB,UAAuB,GAAQ;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,EAAE;YAC7B,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,CAAA;SAC9C;aAAM;YACL,OAAO,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;SACnE;IACH,CAAC;IAED;;OAEG;IACW,eAAU,GAAxB,UAA0B,GAAQ;QAChC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACW,SAAI,GAAlB,UAAoB,GAA4B;QAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;SACxC;IACH,CAAC;IAGD;;;OAGG;IACW,eAAU,GAAxB,UAA0B,KAAU,EAAE,QAAgB;QACpD,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACvB,OAAO,EAAE,CAAC;SACX;QAED,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,mDAAmD;YACnD,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,EAAE;gBACzC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAEf,iBAAiB;gBACjB,IAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;gBAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;oBAC7B,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;iBACvB;aACF;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACW,SAAI,GAAlB,UAAoB,GAAW,EAAE,KAAU;QAAV,sBAAA,EAAA,UAAU;QACzC,IAAM,KAAK,GAAG,gEAAgE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACzF,IAAM,IAAI,GAAG,EAAE,CAAC;QAChB,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC;QAE9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC;SAC5C;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IACH,WAAC;AAAD,CAAC,AAzED,IAyEC","sourcesContent":["export class Tool {\n  /**\n   * 空校验 null或\"\"都返回true\n   */\n  public static isEmpty (obj: any) {\n    if ((typeof obj === 'string')) {\n      return !obj || obj.replace(/\\s+/g, \"\") === \"\"\n    } else {\n      return (!obj || JSON.stringify(obj) === \"{}\" || obj.length === 0);\n    }\n  }\n\n  /**\n   * 非空校验\n   */\n  public static isNotEmpty (obj: any) {\n    return !this.isEmpty(obj);\n  }\n\n  /**\n   * 对象复制\n   * @param obj\n   */\n  public static copy (obj: Record<string, unknown>) {\n    if (Tool.isNotEmpty(obj)) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }\n\n\n  /**\n   * 使用递归将数组转为树形结构\n   * 父ID属性为parent\n   */\n  public static array2Tree (array: any, parentId: number) {\n    if (Tool.isEmpty(array)) {\n      return [];\n    }\n\n    const result = [];\n    for (let i = 0; i < array.length; i++) {\n      const c = array[i];\n      // console.log(Number(c.parent), Number(parentId));\n      if (Number(c.parent) === Number(parentId)) {\n        result.push(c);\n\n        // 递归查看当前节点对应的子节点\n        const children = Tool.array2Tree(array, c.id);\n        if (Tool.isNotEmpty(children)) {\n          c.children = children;\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * 随机生成[len]长度的[radix]进制数\n   * @param len\n   * @param radix 默认62\n   * @returns {string}\n   */\n  public static uuid (len: number, radix = 62) {\n    const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n    const uuid = [];\n    radix = radix || chars.length;\n\n    for (let i = 0; i < len; i++) {\n      uuid[i] = chars[0 | Math.random() * radix];\n    }\n\n    return uuid.join('');\n  }\n}\n"]}]}