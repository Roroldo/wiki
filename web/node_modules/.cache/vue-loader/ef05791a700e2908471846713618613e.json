{"remainingRequest":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!F:\\MyProject\\MyWiki\\Wiki\\web\\src\\components\\the-header.vue?vue&type=style&index=0&id=4c72660e&lang=css","dependencies":[{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\src\\components\\the-header.vue","mtime":1631103042395},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1631892357965},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1631892361423},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":1631892358826},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631892357225},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1631892360081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICAubG9nbyB7CiAgICAgICAgd2lkdGg6IDE4MHB4OwogICAgICAgIGhlaWdodDogNjRweDsKICAgICAgICBmbG9hdDogbGVmdDsKICAgICAgICBjb2xvcjogd2hpdGU7CiAgICAgICAgZm9udC1zaXplOiAxOHB4OwogICAgfQogICAgLmxvZ2luLW1lbnV7CiAgICAgICAgZmxvYXQ6IHJpZ2h0OwogICAgICAgIGNvbG9yOiB3aGl0ZTsKICAgICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7CiAgICB9Cg=="},{"version":3,"sources":["F:\\MyProject\\MyWiki\\Wiki\\web\\src\\components\\the-header.vue"],"names":[],"mappings":";IAsMI,CAAC,CAAC,CAAC,CAAC,EAAE;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB","file":"F:/MyProject/MyWiki/Wiki/web/src/components/the-header.vue","sourceRoot":"","sourcesContent":["<template>\n    <a-layout-header class=\"header\">\n        <div class=\"logo\" >\n            <a href=\"/\" style=\"color: white\">\n                孤霞不落のwiki\n            </a>\n        </div>\n        <a-menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                :style=\"{ lineHeight: '64px'}\"\n                class=\"re_menu\"\n        >\n            <a-menu-item key=\"Home\">\n                <router-link to=\"/\">首页</router-link>\n            </a-menu-item>\n            <a-menu-item key=\"AdminUser\" :style=\"user.id? {} : {display:'none'}\">\n                <router-link to=\"/admin/user\">用户管理</router-link>\n            </a-menu-item>\n            <a-menu-item key=\"AdminEbook\" :style=\"user.id? {} : {display:'none'}\">\n                <router-link to=\"/admin/ebook\">电子书管理</router-link>\n            </a-menu-item>\n            <a-menu-item key=\"AdminCategory\" :style=\"user.id? {} : {display:'none'}\">\n                <router-link to=\"/admin/category\">分类管理</router-link>\n            </a-menu-item>\n            <a-menu-item key=\"About\">\n                <router-link to=\"/about\">关于我</router-link>\n            </a-menu-item>\n            <a-popconfirm\n                title=\"确认退出登录？\"\n                ok-text=\"是\"\n                cancel-text=\"否\"\n                @confirm=\"logout()\"\n            >\n                <a class=\"login-menu\" v-show=\"user.id\">\n                    <span>退出登录</span>\n                </a>\n            </a-popconfirm>\n            <a class=\"login-menu\" v-show=\"user.id\">\n                <span>你好: {{user.name}}</span>\n            </a>\n            <a class=\"login-menu\" v-show=\"!user.id\" @click=\"showLoginModal\">\n                <span>登录</span>\n            </a>\n        </a-menu>\n        <a-modal\n                title=\"登录\"\n                v-model:visible=\"loginModalVisible\"\n                :confirm-loading=\"loginModalLoading\"\n                @ok=\"login\"\n                okText=\"确定\"\n                cancelText=\"取消\"\n        >\n            <a-form :model=\"loginUser\" :label-col=\"{ span: 4 }\" :wrapper-col=\"{ span: 19 }\">\n                <a-form-item label=\"用户名\">\n                    <a-input v-model:value=\"loginName\" placeholder=\"请输入用户名\" />\n                </a-form-item>\n                <a-form-item label=\"密码\">\n                    <a-input v-model:value=\"password\" type=\"password\" placeholder=\"请输入密码\"/>\n                </a-form-item>\n            </a-form>\n        </a-modal>\n    </a-layout-header>\n</template>\n\n<script lang=\"ts\">\n    import {defineComponent, ref, computed, h, onMounted} from 'vue';\n    import axios from 'axios';\n    import {message, notification} from \"ant-design-vue\";\n    import store from \"@/store\";\n    import SmileOutlined from \"@ant-design/icons-vue/SmileOutlined\";\n    import {Tool} from \"@/util/tool\";\n\n    declare let hexMd5: any;\n    declare let KEY: any;\n\n    export default defineComponent({\n        name: 'the-header',\n        setup () {\n            // 登录后保存\n            const user = computed(() => store.state.user);\n\n            // 从the-footer移植过来的WebSocket\n            let websocket: any;\n            let token: any;\n\n            // 登录\n            const loginUser = ref({\n               loginName: \"\",\n                password: \"\"\n            });\n            const loginName = ref(\"\");\n            const password = ref(\"\");\n            const loginModalVisible = ref(false);\n            const loginModalLoading = ref(false);\n            const showLoginModal = () => {\n                loginModalVisible.value = true;\n            }\n\n            // 开始登录\n            const login = () => {\n                console.log(\"开始登录\");\n                loginModalLoading.value = true;\n                loginUser.value.loginName = loginName.value;\n                loginUser.value.password = hexMd5(password.value + KEY);\n                axios.post('/user/login', loginUser.value).then((response) => {\n                    loginModalLoading.value = false;\n                    const data = response.data;\n                    if (data.success) {\n                        loginModalVisible.value = false;\n                        message.success(\"登录成功!\");\n                        store.commit(\"setUser\", data.content);\n                    } else {\n                        message.error(data.message);\n                    }\n                });\n            };\n\n            // 退出登录\n            const logout = () => {\n                console.log(\"退出登录\");\n                axios.get('/user/logout/' + user.value.token).then((response) => {\n                    const data = response.data;\n                    if (data.success) {\n                        message.success(\"成功退出!\");\n                        store.commit(\"setUser\", {});\n                        loginName.value = \"\";\n                        password.value = \"\";\n                        //退出登录后刷新页面跳回首页\n                        location.reload();\n                    } else {\n                        message.error(data.message);\n                    }\n                });\n            };\n\n// ==========================================================\n            // 从the-footer移植过来的WebSocket\n            const onOpen = () => {\n                console.log('WebSocket连接成功,状态码:', websocket.readyState);\n            };\n            const onMessage = (event: any) => {\n                console.log('WebSocket收到消息: ', event.data);\n                notification.open({\n                    message: '收到消息',\n                    description: event.data,\n                    icon: h(SmileOutlined, { style: 'color: #108ee9' }),\n                });\n            };\n            const onError = () => {\n                console.log('WebSocket连接错误，状态码: ', websocket.readyState);\n            };\n            const onClose = () => {\n                console.log('WebSocket连接关闭，状态码: ', websocket.readyState);\n            };\n            const initWebSocket = () => {\n                // 连接成功\n                websocket.onopen = onOpen;\n                // 收到消息时的回调\n                websocket.onmessage = onMessage;\n                // 连接错误\n                websocket.onerror = onError;\n                // 连接关闭的回调\n                websocket.onclose = onClose;\n            };\n\n            onMounted(() => {\n                // WebSocket\n                if ('WebSocket' in window) {\n                    token = Tool.uuid(10);\n                    // 连接地址:ws://127.0.0.1:8081/ws/xxx\n                    websocket = new WebSocket(process.env.VUE_APP_WS_SERVER + '/ws/' + token);\n                    initWebSocket();\n\n                    // 关闭\n                    // websocket.close();\n                } else {\n                    alert('当前浏览器不支持');\n                }\n            });\n\n\n            return {\n                loginModalVisible,\n                loginModalLoading,\n                showLoginModal,\n                loginUser,\n                login,\n                user,\n                logout,\n                loginName,\n                password\n            }\n        }\n    });\n</script>\n\n<style>\n    .logo {\n        width: 180px;\n        height: 64px;\n        float: left;\n        color: white;\n        font-size: 18px;\n    }\n    .login-menu{\n        float: right;\n        color: white;\n        padding-left: 10px;\n    }\n</style>"]}]}