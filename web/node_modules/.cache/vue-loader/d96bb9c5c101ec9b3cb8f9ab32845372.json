{"remainingRequest":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!F:\\MyProject\\MyWiki\\Wiki\\web\\src\\views\\home.vue?vue&type=style&index=0&id=7eb2bc79&scoped=true&lang=css","dependencies":[{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\src\\views\\home.vue","mtime":1623050011000},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\css-loader\\dist\\cjs.js","mtime":1631892357965},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1631892361423},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\postcss-loader\\src\\index.js","mtime":1631892358826},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1631892357225},{"path":"F:\\MyProject\\MyWiki\\Wiki\\web\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1631892360081}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmFudC1hdmF0YXJ7CiAgICB3aWR0aDogNTBweDsKICAgIGhlaWdodDogNTBweDsKICAgIGxpbmUtaGVpZ2h0OiA1MHB4OwogICAgYm9yZGVyLXJhZGl1czogOCU7CiAgICBtYXJnaW46IDVweCAwOwogIH0K"},{"version":3,"sources":["F:\\MyProject\\MyWiki\\Wiki\\web\\src\\views\\home.vue"],"names":[],"mappings":";EAwKE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;EACf","file":"F:/MyProject/MyWiki/Wiki/web/src/views/home.vue","sourceRoot":"","sourcesContent":["<template>\n  <a-layout>\n    <a-layout-sider width=\"210\" style=\"background: #fff;\"\n                    :style=\"{ overflow: 'auto', height: '87vh', left: 0 }\">\n      <a-menu\n              mode=\"inline\"\n              :style=\"{ height: '90%', borderRight: 0 }\"\n              @click=\"handleClick\"\n      >\n        <a-menu-item key=\"welcome\">\n            <HomeOutlined />\n            <span>&nbsp;欢迎</span>\n        </a-menu-item>\n        <a-sub-menu v-for=\"item in level1\" :key=\"item.id\">\n          <template v-slot:title>\n                <span>\n                  <BookOutlined />\n                  {{item.name}}\n                </span>\n          </template>\n          <a-menu-item v-for=\"child in item.children\" :key=\"child.id\">\n            <ReadOutlined />\n            <span>\n              {{child.name}}\n            </span>\n          </a-menu-item>\n        </a-sub-menu>\n      </a-menu>\n    </a-layout-sider>\n    <a-layout-content\n            :style=\"{ background: '#fff', padding: '24px', margin: 0, minHeight: '280px' }\"\n    >\n      <div class=\"welcome\" v-show=\"isShowWelcome\">\n        <the-welcome></the-welcome>\n      </div>\n      <a-list v-show=\"!isShowWelcome\" item-layout=\"vertical\" size=\"large\" :grid=\"{ gutter: 20, column: 3 }\"  :data-source=\"ebooks\">\n        <template #renderItem=\"{ item }\">\n          <a-list-item key=\"item.name\">\n            <template #actions>\n              <span>\n                <component v-bind:is=\"'FileTextOutlined'\" style=\"margin-right: 8px\" />\n                {{ item.docCount }}\n              </span>\n              <span>\n                <component v-bind:is=\"'UserOutlined'\" style=\"margin-right: 8px\" />\n                {{ item.viewCount }}\n              </span>\n              <span>\n                <component v-bind:is=\"'LikeOutlined'\" style=\"margin-right: 8px\" />\n                {{ item.voteCount }}\n              </span>\n            </template>\n            <a-list-item-meta :description=\"item.description\">\n              <template #title>\n                <router-link :to=\"'/doc?ebookId=' + item.id\">\n                  {{ item.name }}\n                </router-link>\n              </template>\n              <template #avatar><a-avatar :src=\"item.cover\" /></template>\n            </a-list-item-meta>\n          </a-list-item>\n        </template>\n      </a-list>\n    </a-layout-content>\n  </a-layout>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent,onMounted,ref,reactive,toRef } from 'vue';\nimport axios from 'axios';\nimport { message } from \"ant-design-vue\";\nimport { Tool } from \"@/util/tool\";\nimport TheWelcome from '@/components/the-welcome.vue';\n\n/*const listData: any = [];\nfor (let i = 0; i < 23; i++) {\n  listData.push({\n    href: 'https://www.antdv.com/',\n    title: `ant design vue part ${i}`,\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n    description:\n            'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n    content:\n            'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\n  });\n}*/\n\n\nexport default defineComponent({\n  name: 'Home',\n  components: {\n    TheWelcome\n  },\n  setup(){\n    const ebooks = ref();\n    // const ebook1 = reactive({books:[]})\n    const level1 = ref();\n    let categorys: any;\n    /**\n     * 查询所有分类\n     */\n    const handleQueryCategory = () => {\n      axios.get(\"/category/all\").then((response) => {\n        const data = response.data;\n        if (data.success) {\n          categorys = data.content;\n          console.log(\"原始数组: \",categorys);\n\n          level1.value = [];\n          level1.value = Tool.array2Tree(categorys,0);\n          console.log(\"树形结构: \",level1.value);\n        }else {\n          message.error(data.message);\n        }\n      });\n    };\n\n    const isShowWelcome = ref(true);\n    let categoryId2 = 0;\n    const handleQueryEbook = () => {\n      axios.get(\"/ebook/list\",{\n        params: {\n          page: 1,\n          size: 1000,\n          categoryId2: categoryId2\n        }\n      }).then((response) => {\n        const data = response.data;\n        ebooks.value = data.content.list;\n      });\n    }\n\n\n    const handleClick = (value: any) => {\n      console.log(\"menu click\",value);\n      if (value.key === 'welcome'){\n        isShowWelcome.value = true;\n      }else {\n        categoryId2 = value.key;\n        isShowWelcome.value = false;\n        handleQueryEbook();\n      }\n    }\n\n    onMounted(() => {\n      handleQueryCategory();\n    });\n\n    return{\n      ebooks,\n      // ebooks2:toRef(ebook1,\"books\"),\n      // listData,\n      pagination:{\n        onChange: (page: any) => {\n          console.log(page);\n        },\n        pageSize: 3,\n      },\n\n      handleClick,\n      level1,\n      isShowWelcome\n    }\n  }\n});\n</script>\n\n<style scoped>\n  .ant-avatar{\n    width: 50px;\n    height: 50px;\n    line-height: 50px;\n    border-radius: 8%;\n    margin: 5px 0;\n  }\n</style>\n"]}]}